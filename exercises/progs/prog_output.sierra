type felt = felt;
type RangeCheck = RangeCheck;
type u128 = u128;
type core::integer::u256 = Struct<ut@core::integer::u256, u128, u128>;
type Unit = Struct<ut@Tuple>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type Array<felt> = Array<felt>;
type core::PanicResult::<()> = Enum<ut@core::PanicResult::<()>, Unit, Array<felt>>;
type Uninitialized<RangeCheck> = Uninitialized<RangeCheck>;

libfunc felt_const<10> = felt_const<10>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc function_call<user@core::integer::u256_from_felt> = function_call<user@core::integer::u256_from_felt>;
libfunc store_temp<core::integer::u256> = store_temp<core::integer::u256>;
libfunc function_call<user@core::integer::U256PartialOrd::lt> = function_call<user@core::integer::U256PartialOrd::lt>;
libfunc enum_match<core::bool> = enum_match<core::bool>;
libfunc branch_align = branch_align;
libfunc drop<Unit> = drop<Unit>;
libfunc array_new<felt> = array_new<felt>;
libfunc felt_const<104258483950883055767837868997866434864> = felt_const<104258483950883055767837868997866434864>;
libfunc array_append<felt> = array_append<felt>;
libfunc enum_init<core::PanicResult::<()>, 1> = enum_init<core::PanicResult::<()>, 1>;
libfunc store_temp<core::PanicResult::<()>> = store_temp<core::PanicResult::<()>>;
libfunc felt_const<40876966852591974785504727322685773721904> = felt_const<40876966852591974785504727322685773721904>;
libfunc function_call<user@core::debug::print_felt> = function_call<user@core::debug::print_felt>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::PanicResult::<()>, 0> = enum_init<core::PanicResult::<()>, 0>;
libfunc u128s_from_felt = u128s_from_felt;
libfunc u128_const<0> = u128_const<0>;
libfunc struct_construct<core::integer::u256> = struct_construct<core::integer::u256>;
libfunc jump = jump;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc rename<core::integer::u256> = rename<core::integer::u256>;
libfunc alloc_local<RangeCheck> = alloc_local<RangeCheck>;
libfunc finalize_locals = finalize_locals;
libfunc dup<core::integer::u256> = dup<core::integer::u256>;
libfunc struct_deconstruct<core::integer::u256> = struct_deconstruct<core::integer::u256>;
libfunc drop<u128> = drop<u128>;
libfunc u128_lt = u128_lt;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc store_local<RangeCheck> = store_local<RangeCheck>;
libfunc u128_eq = u128_eq;
libfunc drop<core::integer::u256> = drop<core::integer::u256>;
libfunc rename<core::bool> = rename<core::bool>;
libfunc store_temp<Array<felt>> = store_temp<Array<felt>>;
libfunc print = print;
libfunc store_temp<Unit> = store_temp<Unit>;

felt_const<10>() -> ([1]);
felt_const<10>() -> ([2]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<felt>([1]) -> ([6]);
function_call<user@core::integer::u256_from_felt>([5], [6]) -> ([3], [4]);
store_temp<RangeCheck>([3]) -> ([9]);
store_temp<felt>([2]) -> ([10]);
function_call<user@core::integer::u256_from_felt>([9], [10]) -> ([7], [8]);
store_temp<RangeCheck>([7]) -> ([13]);
store_temp<core::integer::u256>([4]) -> ([14]);
store_temp<core::integer::u256>([8]) -> ([15]);
function_call<user@core::integer::U256PartialOrd::lt>([13], [14], [15]) -> ([11], [12]);
enum_match<core::bool>([12]) { fallthrough([16]) 23([17]) };
branch_align() -> ();
drop<Unit>([16]) -> ();
array_new<felt>() -> ([18]);
felt_const<104258483950883055767837868997866434864>() -> ([19]);
store_temp<felt>([19]) -> ([19]);
array_append<felt>([18], [19]) -> ([20]);
enum_init<core::PanicResult::<()>, 1>([20]) -> ([21]);
store_temp<RangeCheck>([11]) -> ([22]);
store_temp<core::PanicResult::<()>>([21]) -> ([23]);
return([22], [23]);
branch_align() -> ();
drop<Unit>([17]) -> ();
felt_const<40876966852591974785504727322685773721904>() -> ([24]);
store_temp<felt>([24]) -> ([26]);
function_call<user@core::debug::print_felt>([26]) -> ([25]);
drop<Unit>([25]) -> ();
struct_construct<Unit>() -> ([27]);
enum_init<core::PanicResult::<()>, 0>([27]) -> ([28]);
store_temp<RangeCheck>([11]) -> ([29]);
store_temp<core::PanicResult::<()>>([28]) -> ([30]);
return([29], [30]);
u128s_from_felt([0], [1]) { fallthrough([2], [3]) 41([4], [5], [6]) };
branch_align() -> ();
u128_const<0>() -> ([7]);
struct_construct<core::integer::u256>([3], [7]) -> ([8]);
store_temp<RangeCheck>([2]) -> ([9]);
store_temp<core::integer::u256>([8]) -> ([10]);
jump() { 45() };
branch_align() -> ();
struct_construct<core::integer::u256>([6], [5]) -> ([11]);
store_temp<RangeCheck>([4]) -> ([9]);
store_temp<core::integer::u256>([11]) -> ([10]);
rename<RangeCheck>([9]) -> ([12]);
rename<core::integer::u256>([10]) -> ([13]);
return([12], [13]);
alloc_local<RangeCheck>() -> ([4]);
finalize_locals() -> ();
dup<core::integer::u256>([1]) -> ([1], [5]);
struct_deconstruct<core::integer::u256>([5]) -> ([6], [7]);
drop<u128>([6]) -> ();
dup<core::integer::u256>([2]) -> ([2], [8]);
struct_deconstruct<core::integer::u256>([8]) -> ([9], [10]);
drop<u128>([9]) -> ();
u128_lt([0], [7], [10]) { fallthrough([11]) 63([12]) };
branch_align() -> ();
struct_construct<Unit>() -> ([13]);
enum_init<core::bool, 0>([13]) -> ([14]);
store_temp<RangeCheck>([11]) -> ([3]);
store_temp<core::bool>([14]) -> ([15]);
jump() { 68() };
branch_align() -> ();
struct_construct<Unit>() -> ([16]);
enum_init<core::bool, 1>([16]) -> ([17]);
store_temp<RangeCheck>([12]) -> ([3]);
store_temp<core::bool>([17]) -> ([15]);
store_local<RangeCheck>([4], [3]) -> ([3]);
enum_match<core::bool>([15]) { fallthrough([18]) 121([19]) };
branch_align() -> ();
drop<Unit>([18]) -> ();
dup<core::integer::u256>([1]) -> ([1], [20]);
struct_deconstruct<core::integer::u256>([20]) -> ([21], [22]);
drop<u128>([21]) -> ();
dup<core::integer::u256>([2]) -> ([2], [23]);
struct_deconstruct<core::integer::u256>([23]) -> ([24], [25]);
drop<u128>([24]) -> ();
u128_eq([22], [25]) { fallthrough() 84() };
branch_align() -> ();
struct_construct<Unit>() -> ([26]);
enum_init<core::bool, 0>([26]) -> ([27]);
store_temp<core::bool>([27]) -> ([28]);
jump() { 88() };
branch_align() -> ();
struct_construct<Unit>() -> ([29]);
enum_init<core::bool, 1>([29]) -> ([30]);
store_temp<core::bool>([30]) -> ([28]);
enum_match<core::bool>([28]) { fallthrough([31]) 98([32]) };
branch_align() -> ();
drop<Unit>([31]) -> ();
drop<core::integer::u256>([2]) -> ();
drop<core::integer::u256>([1]) -> ();
struct_construct<Unit>() -> ([33]);
enum_init<core::bool, 0>([33]) -> ([34]);
store_temp<RangeCheck>([3]) -> ([35]);
store_temp<core::bool>([34]) -> ([36]);
jump() { 118() };
branch_align() -> ();
drop<Unit>([32]) -> ();
struct_deconstruct<core::integer::u256>([1]) -> ([37], [38]);
drop<u128>([38]) -> ();
struct_deconstruct<core::integer::u256>([2]) -> ([39], [40]);
drop<u128>([40]) -> ();
u128_lt([3], [37], [39]) { fallthrough([41]) 111([42]) };
branch_align() -> ();
struct_construct<Unit>() -> ([43]);
enum_init<core::bool, 0>([43]) -> ([44]);
store_temp<RangeCheck>([41]) -> ([45]);
store_temp<core::bool>([44]) -> ([46]);
jump() { 116() };
branch_align() -> ();
struct_construct<Unit>() -> ([47]);
enum_init<core::bool, 1>([47]) -> ([48]);
store_temp<RangeCheck>([42]) -> ([45]);
store_temp<core::bool>([48]) -> ([46]);
rename<RangeCheck>([45]) -> ([35]);
rename<core::bool>([46]) -> ([36]);
rename<RangeCheck>([35]) -> ([49]);
rename<core::bool>([36]) -> ([50]);
jump() { 129() };
branch_align() -> ();
drop<Unit>([19]) -> ();
drop<core::integer::u256>([2]) -> ();
drop<core::integer::u256>([1]) -> ();
struct_construct<Unit>() -> ([51]);
enum_init<core::bool, 1>([51]) -> ([52]);
store_temp<RangeCheck>([3]) -> ([49]);
store_temp<core::bool>([52]) -> ([50]);
rename<RangeCheck>([49]) -> ([53]);
rename<core::bool>([50]) -> ([54]);
return([53], [54]);
array_new<felt>() -> ([1]);
array_append<felt>([1], [0]) -> ([2]);
struct_construct<Unit>() -> ([3]);
drop<Unit>([3]) -> ();
store_temp<Array<felt>>([2]) -> ([2]);
print([2]) -> ();
struct_construct<Unit>() -> ([4]);
store_temp<Unit>([4]) -> ([5]);
return([5]);

prog::prog::main@0([0]: RangeCheck) -> (RangeCheck, core::PanicResult::<()>);
core::integer::u256_from_felt@34([0]: RangeCheck, [1]: felt) -> (RangeCheck, core::integer::u256);
core::integer::U256PartialOrd::lt@48([0]: RangeCheck, [1]: core::integer::u256, [2]: core::integer::u256) -> (RangeCheck, core::bool);
core::debug::print_felt@132([0]: felt) -> (Unit);
